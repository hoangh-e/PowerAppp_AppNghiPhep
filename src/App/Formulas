//=== NAVIGATION ===
MenuItems = Table(
  {Id:1, Name: "Trang chủ", Screen: "DashboardScreen", Icon: "Home"},
  {Id:2, Name: "Đơn nghỉ phép", Screen: "MyLeavesScreen", Icon: "CalendarBlank"},
  {Id:3, Name: "Tạo đơn mới", Screen: "LeaveRequestScreen", Icon: "Add"},
  {Id:4, Name: "Phê duyệt", Screen: "ApprovalScreen", Icon: "CheckBadge"},
  {Id:5, Name: "Lịch nghỉ", Screen: "CalendarScreen", Icon: "Calendar"},
  {Id:6, Name: "Báo cáo", Screen: "ReportsScreen", Icon: "BarChart4"},
  {Id:7, Name: "Quản lý", Screen: "ManagementScreen", Icon: "Settings"},
  {Id:8, Name: "Hồ sơ", Screen: "ProfileScreen", Icon: "Person"}
);

//=== FONT SIZES ===
FontSizes = {
  Small: 10,      // Captions, hints, metadata
  Base: 12,       // Body text, normal content
  Medium: 14,     // Form labels, button text
  Large: 16,      // Section headers, card titles
  XLarge: 18,     // Page headers, screen titles
  XXLarge: 20     // Main app headers
};

//Typography scale for consistency
Typography = {
  Caption: {Size: FontSizes.Small, Weight: FontWeight.Normal, Font: Font.'Open Sans'},
  Body: {Size: FontSizes.Base, Weight: FontWeight.Normal, Font: Font.'Open Sans'},
  Label: {Size: FontSizes.Medium, Weight: FontWeight.Semibold, Font: Font.'Open Sans'},
  Heading3: {Size: FontSizes.Large, Weight: FontWeight.Bold, Font: Font.'Open Sans'},
  Heading2: {Size: FontSizes.XLarge, Weight: FontWeight.Bold, Font: Font.'Open Sans'},
  Heading1: {Size: FontSizes.XXLarge, Weight: FontWeight.Bold, Font: Font.'Open Sans'}
};

//Global styles for Leave Management UI - Using FontSizes
Styles = {
  Title: {
    Font: Font.'Open Sans',
    Size: FontSizes.XXLarge,
    Weight: FontWeight.Bold,
    Color: RGBA(32, 54, 71, 1),
    Alignment: Align.Center
  },
  Button: {
    Font: Font.'Open Sans',
    Size: FontSizes.Medium,
    Weight: FontWeight.Semibold,
    Color: RGBA(255, 255, 255, 1),
    Fill: RGBA(33, 150, 243, 1)
  },
  Card: {
    Font: Font.'Open Sans',
    Size: FontSizes.Base,
    Weight: FontWeight.Normal,
    Color: RGBA(55, 65, 81, 1),
    Fill: RGBA(255, 255, 255, 1),
    BorderColor: RGBA(230, 230, 230, 1)
  },
  Input: {
    Font: Font.'Open Sans',
    Size: FontSizes.Medium,
    Weight: FontWeight.Normal,
    Color: RGBA(55, 65, 81, 1),
    Fill: RGBA(255, 255, 255, 1),
    BorderColor: RGBA(224, 224, 224, 1)
  }
};

//Permission checking function - SIMPLE AND CORRECT
CheckPermission(UserPerm:Number, RequiredPerm:Number):Boolean = (
  Mod(Int(UserPerm / RequiredPerm), 2) = 1
);

//Helper function to calculate user permission level
GetUserPermissionLevel(Permission:Number):Text = (
  If(CheckPermission(Permission, UserPermissions.SYSTEM_ADMIN), "System Admin",
    If(Or(CheckPermission(Permission, UserPermissions.MANAGE_USERS), CheckPermission(Permission, UserPermissions.MANAGE_ROLES)), "Admin",
      If(CheckPermission(Permission, UserPermissions.RECORD_LEAVE), "HR",
        If(Or(CheckPermission(Permission, UserPermissions.APPROVE_LEVEL_2), CheckPermission(Permission, UserPermissions.APPROVE_LEVEL_3)), "Director",
          If(CheckPermission(Permission, UserPermissions.APPROVE_LEVEL_1), "Manager", "Employee")))))
);

//Helper function to check management access
CanAccessManagement(Permission:Number):Boolean = (
  Or(CheckPermission(Permission, UserPermissions.MANAGE_USERS), 
     CheckPermission(Permission, UserPermissions.MANAGE_ROLES), 
     CheckPermission(Permission, UserPermissions.MANAGE_APPROVAL_PROCESS), 
     CheckPermission(Permission, UserPermissions.SYSTEM_ADMIN))
);

//Leave Request Status value conversion functions
LeaveStatusValue(LeaveStatus:Text): Number = (
  Switch(LeaveStatus,
    "ChoDuyetCap1", 0,
    "ChoDuyetCap2", 1,
    "ChoDuyetCap3", 2,
    "DaDuyet", 3,
    "TuChoi", 4,
    "Huy", 5,
    "HetHan", 6,
    -1
  )
);

//Leave Status Display Text
LeaveStatusText(LeaveStatus:Text): Text = (
  Switch(LeaveStatus,
    "ChoDuyetCap1", "Chờ phê duyệt cấp 1",
    "ChoDuyetCap2", "Chờ phê duyệt cấp 2", 
    "ChoDuyetCap3", "Chờ phê duyệt cấp 3",
    "DaDuyet", "Đã phê duyệt",
    "TuChoi", "Bị từ chối",
    "Huy", "Đã hủy",
    "HetHan", "Hết hạn",
    "Không xác định"
  )
);

//Leave Type Display Text
LeaveTypeText(LeaveType:Text): Text = (
  Switch(LeaveType,
    "AnnualLeave", "Phép năm",
    "SickLeave", "Nghỉ ốm",
    "PersonalLeave", "Nghỉ việc riêng",
    "MaternityLeave", "Nghỉ thai sản",
    "PaternityLeave", "Nghỉ chăm con",
    "CompensatoryLeave", "Nghỉ bù",
    "UnpaidLeave", "Nghỉ không lương",
    LeaveType
  )
);

//User roles for Leave Management
UserRoles = {
  NhanVien: "Employee",
  QuanLy: "Manager", 
  GiamDoc: "Director",
  NhanSu: "HR",
  TruongPhong: "DepartmentHead"
};

//Permission values - Powers of 2 for bitwise operations
UserPermissions = {
  PERSONAL_LEAVE: 1,           // Quyền nghỉ phép cá nhân
  SPECIAL_LEAVE: 2,            // Tạo đơn nghỉ phép đặc biệt
  VIEW_TEAM_LEAVE: 4,          // Xem đơn nghỉ của team
  VIEW_ALL_LEAVE: 8,           // Xem tất cả đơn nghỉ
  APPROVE_LEVEL_1: 16,         // Phê duyệt cấp 1 (Manager)
  APPROVE_LEVEL_2: 32,         // Phê duyệt cấp 2 (Director khối)
  APPROVE_LEVEL_3: 64,         // Phê duyệt cấp 3 (Director điều hành)
  RECORD_LEAVE: 128,           // Ghi nhận nghỉ phép
  VIEW_DASHBOARD: 256,         // Xem dashboard
  EXPORT_REPORTS: 512,         // Xuất báo cáo
  MANAGE_LEAVE_QUOTA: 1024,    // Quản lý quota ngày phép
  MANAGE_HOLIDAYS: 2048,       // Quản lý ngày lễ
  MANAGE_USERS: 4096,          // Quản lý người dùng
  MANAGE_ROLES: 8192,          // Quản lý vai trò
  MANAGE_APPROVAL_PROCESS: 16384, // Quản lý quy trình phê duyệt
  SYSTEM_ADMIN: 32768          // Quản trị hệ thống
};

//Role permission combinations
RolePermissionCombinations = {
  Employee: UserPermissions.PERSONAL_LEAVE + UserPermissions.SPECIAL_LEAVE + UserPermissions.VIEW_DASHBOARD,
  Manager: UserPermissions.PERSONAL_LEAVE + UserPermissions.SPECIAL_LEAVE + UserPermissions.VIEW_TEAM_LEAVE + UserPermissions.APPROVE_LEVEL_1 + UserPermissions.VIEW_DASHBOARD + UserPermissions.EXPORT_REPORTS,
  Director: UserPermissions.PERSONAL_LEAVE + UserPermissions.SPECIAL_LEAVE + UserPermissions.VIEW_TEAM_LEAVE + UserPermissions.VIEW_ALL_LEAVE + UserPermissions.APPROVE_LEVEL_2 + UserPermissions.APPROVE_LEVEL_3 + UserPermissions.MANAGE_HOLIDAYS + UserPermissions.VIEW_DASHBOARD + UserPermissions.EXPORT_REPORTS,
  HR: UserPermissions.PERSONAL_LEAVE + UserPermissions.SPECIAL_LEAVE + UserPermissions.VIEW_ALL_LEAVE + UserPermissions.RECORD_LEAVE + UserPermissions.EXPORT_REPORTS + UserPermissions.MANAGE_LEAVE_QUOTA + UserPermissions.MANAGE_HOLIDAYS + UserPermissions.VIEW_DASHBOARD,
  Admin: 65535  // All permissions
};

//Demo Users for Testing
DemoUsers = Table(
  {Name: "Admin Demo", Email: "admin@company.com", Permission: RolePermissionCombinations.Admin, Role: "Admin", HoTen: "Quản trị viên", MaVaiTro: "Admin"},
  {Name: "Employee Demo", Email: "employee@company.com", Permission: RolePermissionCombinations.Employee, Role: "Employee", HoTen: "Nguyễn Văn An", MaVaiTro: "Employee"},
  {Name: "Manager Demo", Email: "manager@company.com", Permission: RolePermissionCombinations.Manager, Role: "Manager", HoTen: "Trần Thị Bình", MaVaiTro: "Manager"},
  {Name: "Director Demo", Email: "director@company.com", Permission: RolePermissionCombinations.Director, Role: "Director", HoTen: "Lê Văn Cường", MaVaiTro: "Director"},
  {Name: "HR Demo", Email: "hr@company.com", Permission: RolePermissionCombinations.HR, Role: "HR", HoTen: "Phạm Thị Dung", MaVaiTro: "HR"}
);

//NOTE: UserSessionANP is initialized in App/OnStart with Set() function
//Structure: {Id, HoTen, Email, MaVaiTro, Permission, NguoiQuanLyId, ChucDanh, MaDonVi, TrangThai, Name, Role}
//All user authentication and permission checks should be done in screens after UserSessionANP is available
