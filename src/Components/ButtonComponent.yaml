ComponentDefinitions:
  ButtonComponent:
    DefinitionType: CanvasComponent
    CustomProperties:
      Text:
        PropertyKind: Input
        DisplayName: Text
        Description: "Text hiển thị trên button"
        DataType: Text
        Default: ="Button"
      Variant:
        PropertyKind: Input
        DisplayName: Variant
        Description: "Loại button:Primary, Secondary, Danger, Ghost, Outline"
        DataType: Text
        Default: ="Primary"
      Size:
        PropertyKind: Input
        DisplayName: Size
        Description: "Kích thước button:Small, Medium, Large"
        DataType: Text
        Default: ="Medium"
      Icon:
        PropertyKind: Input
        DisplayName: Icon
        Description: "Icon hiển thị (tùy chọn)"
        DataType: Text
        Default: =""
      IconPosition:
        PropertyKind: Input
        DisplayName: IconPosition
        Description: "Vị trí icon:Left, Right"
        DataType: Text
        Default: ="Left"
      IsDisabled:
        PropertyKind: Input
        DisplayName: IsDisabled
        Description: "Button bị disable"
        DataType: Boolean
        Default: =false
      IsLoading:
        PropertyKind: Input
        DisplayName: IsLoading
        Description: "Button đang loading"
        DataType: Boolean
        Default: =false
      LoadingText:
        PropertyKind: Input
        DisplayName: LoadingText
        Description: "Text khi loading"
        DataType: Text
        Default: ="Đang xử lý..."
      FullWidth:
        PropertyKind: Input
        DisplayName: FullWidth
        Description: "Button chiếm full width"
        DataType: Boolean
        Default: =false
      OnClick:
        PropertyKind: Event
        DisplayName: OnClick
        Description: "Sự kiện khi click button"
        ReturnType: None
        Default: =false
    Properties:
      Height: =App.Height * 0.06
      Width: =App.Width * 0.15
    Children:
      - 'Button.Container':
          Control: Classic/Button
          Properties:
            X: =0
            Y: =0
            Width: =If(ButtonComponent.FullWidth, 
              Parent.Width, 
              Switch(ButtonComponent.Size,
                "Small", Parent.Width * 0.8,
                "Medium", Parent.Width * 0.9,
                "Large", Parent.Width,
                Parent.Width * 0.9))
            Height: =Switch(ButtonComponent.Size,
              "Small", Parent.Height * 0.7,
              "Medium", Parent.Height * 0.8,
              "Large", Parent.Height,
              Parent.Height * 0.8)
            Text: =If(ButtonComponent.IsLoading, 
              ButtonComponent.LoadingText, 
              ButtonComponent.Text)
            
            # Fill Color - Consistent
            Fill: =If(ButtonComponent.IsDisabled,
              RGBA(245, 245, 245, 1),
              Switch(ButtonComponent.Variant,
                "Primary", RGBA(227, 242, 253, 1),
                "Secondary", RGBA(255, 255, 255, 1),
                "Danger", RGBA(255, 235, 238, 1),
                "Ghost", RGBA(0, 0, 0, 0),
                "Outline", RGBA(255, 255, 255, 1),
                RGBA(227, 242, 253, 1)))
                
            # Text Color - Consistent
            Color: =If(ButtonComponent.IsDisabled,
              RGBA(158, 158, 158, 1),
              Switch(ButtonComponent.Variant,
                "Primary", RGBA(33, 150, 243, 1),
                "Secondary", RGBA(55, 65, 81, 1),
                "Danger", RGBA(244, 67, 54, 1),
                "Ghost", RGBA(55, 65, 81, 1),
                "Outline", RGBA(33, 150, 243, 1),
                RGBA(33, 150, 243, 1)))
                
            # Border Color - Consistent
            BorderColor: =If(ButtonComponent.IsDisabled,
              RGBA(224, 224, 224, 1),
              Switch(ButtonComponent.Variant,
                "Primary", RGBA(187, 222, 251, 1),
                "Secondary", RGBA(224, 224, 224, 1),
                "Danger", RGBA(255, 205, 210, 1),
                "Ghost", RGBA(0, 0, 0, 0),
                "Outline", RGBA(187, 222, 251, 1),
                RGBA(187, 222, 251, 1)))
                
            BorderThickness: =Switch(ButtonComponent.Variant,
              "Ghost", 0,
              2)
              
            # Font Properties - Standardized
            Font: =Font.'Open Sans'
            FontWeight: =FontWeight.Semibold
            Size: =Self.Height * 0.25
              
            # Display Mode
            DisplayMode: =If(Or(ButtonComponent.IsDisabled, ButtonComponent.IsLoading),
              DisplayMode.Disabled,
              DisplayMode.Edit)
              
            # Click Handler
            OnSelect: |
              =If(Not(Or(ButtonComponent.IsDisabled, ButtonComponent.IsLoading)), ButtonComponent.OnClick(), false)
              
      # Icon Container (GroupContainer for logic)
      - 'Button.Icon.Container':
          Control: GroupContainer
          Variant: ManualLayout
          Properties:
            X: =If(ButtonComponent.IconPosition = "Left",
              'Button.Container'.Width * 0.05,
              'Button.Container'.Width * 0.8)
            Y: =('Button.Container'.Height - Self.Height) / 2
            Width: ='Button.Container'.Height * 0.4
            Height: ='Button.Container'.Height * 0.4
            Visible: =Not(IsBlank(ButtonComponent.Icon))
          Children:
            - 'Button.Icon':
                Control: Classic/Icon
                Properties:
                  X: =0
                  Y: =0
                  Width: =Parent.Width
                  Height: =Parent.Height
                  Icon: =Switch(ButtonComponent.Icon,
                    "Add", Icon.Add,
                    "Edit", Icon.Edit,
                    "Delete", Icon.Cancel,
                    "Save", Icon.Save,
                    "Cancel", Icon.Cancel,
                    "Search", Icon.Search,
                    "Filter", Icon.Filter,
                    "Download", Icon.Download,
                    "Settings", Icon.Settings,
                    "User", Icon.Person,
                    "Calendar", Icon.CalendarBlank,
                    "Clock", Icon.Clock,
                    "Check", Icon.Check,
                    "ChevronLeft", Icon.ChevronLeft,
                    "ChevronRight", Icon.ChevronRight,
                    "ChevronUp", Icon.ChevronUp,
                    "ChevronDown", Icon.ChevronDown,
                    "Mail", Icon.Mail,
                    "Phone", Icon.Phone,
                    "Home", Icon.Home,
                    "Help", Icon.Help,
                    "Warning", Icon.Warning,
                    "Error", Icon.Error,
                    "Information", Icon.Information,
                    "View", Icon.View,
                    "Hamburger", Icon.Hamburger,
                    Icon.Person)
                  Color: =If(ButtonComponent.IsDisabled,
                    RGBA(158, 158, 158, 1),
                    Switch(ButtonComponent.Variant,
                      "Primary", RGBA(33, 150, 243, 1),
                      "Secondary", RGBA(55, 65, 81, 1),
                      "Danger", RGBA(244, 67, 54, 1),
                      "Ghost", RGBA(55, 65, 81, 1),
                      "Outline", RGBA(33, 150, 243, 1),
                      RGBA(33, 150, 243, 1)))
                  
      # Loading Indicator
      - 'Button.Loading.Icon':
          Control: Classic/Icon
          Properties:
            X: =('Button.Container'.Width - Self.Width) / 2
            Y: =('Button.Container'.Height - Self.Height) / 2
            Width: ='Button.Container'.Height * 0.4
            Height: ='Button.Container'.Height * 0.4
            Icon: =Icon.Clock
            Color: =If(ButtonComponent.IsDisabled,
              RGBA(158, 158, 158, 1),
              Switch(ButtonComponent.Variant,
                "Primary", RGBA(33, 150, 243, 1),
                "Secondary", RGBA(55, 65, 81, 1),
                "Danger", RGBA(244, 67, 54, 1),
                "Ghost", RGBA(55, 65, 81, 1),
                "Outline", RGBA(33, 150, 243, 1),
                RGBA(33, 150, 243, 1)))
            Visible: =ButtonComponent.IsLoading
            
      # Hover Effect Overlay
      - 'Button.Hover.Overlay':
          Control: Rectangle
          Properties:
            X: =0
            Y: =0
            Width: ='Button.Container'.Width
            Height: ='Button.Container'.Height
            Fill: =Switch(ButtonComponent.Variant,
              "Primary", RGBA(187, 222, 251, 0.5),
              "Secondary", RGBA(248, 250, 252, 0.5),
              "Danger", RGBA(255, 205, 210, 0.5),
              "Ghost", RGBA(248, 250, 252, 0.5),
              "Outline", RGBA(227, 242, 253, 0.3),
              RGBA(187, 222, 251, 0.5))
            BorderColor: ='Button.Container'.BorderColor
            BorderThickness: ='Button.Container'.BorderThickness
            Visible: =false
            
      # Focus Ring
      - 'Button.Focus.Ring':
          Control: Rectangle
          Properties:
            X: =-2
            Y: =-2
            Width: ='Button.Container'.Width + 4
            Height: ='Button.Container'.Height + 4
            Fill: =RGBA(0, 0, 0, 0)
            BorderColor: =RGBA(187, 222, 251, 0.8)
            BorderThickness: =2
            Visible: =false 